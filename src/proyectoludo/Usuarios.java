/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoludo;

import java.awt.Component;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import javax.swing.text.AbstractDocument;

/**
 *
 * @author ricardo
 */
public class Usuarios extends javax.swing.JFrame {
    SQLConn con;
    PreparedStatement pst;
    Map<String,Integer> rankList=new HashMap<String,Integer>();
    /**
     * Creates new form Usuarios
     */
    String ordenarPor = "ID_usuario";
    String ordenarDeForma = "ASC";
    public Usuarios() {
        try{
            con = new SQLConn();
        }catch(Exception ex){
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, "ERROR FATAL - ERROR AL TRATAR DE CREAR CONECCION A LA BASE DE DATOS","ERROR Usuarios-SQLCONN",JOptionPane.ERROR_MESSAGE);
        }
        initComponents();
        resizeColumnWidth(usuarios_tbl_users);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        usuarios_tbl_users = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        usuarios_btn_add = new javax.swing.JButton();
        usuarios_btn_edit = new javax.swing.JButton();
        principal_btn_clean = new javax.swing.JButton();
        usuarios_btn_del = new javax.swing.JButton();
        usuarios_btn_actTbl = new javax.swing.JButton();
        usuarios_jtf_nombre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        usuarios_jtf_pass = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        usuarios_jtf_email = new javax.swing.JTextField();
        usuarios_cb_rank = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        usuarios_jtf_tlf = new javax.swing.JTextField();
        usuarios_jtf_id = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        usuario_cb_ordenpor = new javax.swing.JComboBox<>();
        usuario_cb_ordendeforma = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        usuarios_btn_orderAccept = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("USUARIOS DEL SISTEMA");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        usuarios_tbl_users.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        usuarios_tbl_users.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        usuarios_tbl_users.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Usuario", "Rango", "Nombre", "Contraseña", "Telefono", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        usuarios_tbl_users.setSelectionBackground(new java.awt.Color(255, 153, 153));
        usuarios_tbl_users.getTableHeader().setReorderingAllowed(false);
        usuarios_tbl_users.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usuarios_tbl_usersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(usuarios_tbl_users);
        if (usuarios_tbl_users.getColumnModel().getColumnCount() > 0) {
            usuarios_tbl_users.getColumnModel().getColumn(0).setPreferredWidth(60);
            usuarios_tbl_users.getColumnModel().getColumn(0).setMaxWidth(60);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(233, 58, 720, 330));

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        usuarios_btn_add.setBackground(new java.awt.Color(204, 255, 153));
        usuarios_btn_add.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        usuarios_btn_add.setForeground(new java.awt.Color(51, 51, 51));
        usuarios_btn_add.setText("Añadir");
        usuarios_btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarios_btn_addActionPerformed(evt);
            }
        });

        usuarios_btn_edit.setBackground(new java.awt.Color(255, 204, 153));
        usuarios_btn_edit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        usuarios_btn_edit.setForeground(new java.awt.Color(51, 51, 51));
        usuarios_btn_edit.setText("Editar");
        usuarios_btn_edit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usuarios_btn_editMouseClicked(evt);
            }
        });
        usuarios_btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarios_btn_editActionPerformed(evt);
            }
        });

        principal_btn_clean.setBackground(new java.awt.Color(204, 204, 204));
        principal_btn_clean.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        principal_btn_clean.setForeground(new java.awt.Color(51, 51, 51));
        principal_btn_clean.setText("Limpiar");
        principal_btn_clean.setToolTipText("Limpiar los campos");
        principal_btn_clean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                principal_btn_cleanActionPerformed(evt);
            }
        });

        usuarios_btn_del.setBackground(new java.awt.Color(255, 102, 102));
        usuarios_btn_del.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        usuarios_btn_del.setForeground(new java.awt.Color(51, 51, 51));
        usuarios_btn_del.setText("Eliminar");
        usuarios_btn_del.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usuarios_btn_delMouseClicked(evt);
            }
        });
        usuarios_btn_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarios_btn_delActionPerformed(evt);
            }
        });

        usuarios_btn_actTbl.setBackground(new java.awt.Color(204, 204, 255));
        usuarios_btn_actTbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        usuarios_btn_actTbl.setForeground(new java.awt.Color(51, 51, 51));
        usuarios_btn_actTbl.setText("Actualizar");
        usuarios_btn_actTbl.setToolTipText("Limpiar los campos");
        usuarios_btn_actTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarios_btn_actTblActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(usuarios_btn_del, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usuarios_btn_edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(usuarios_btn_add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usuarios_btn_actTbl)
                            .addComponent(principal_btn_clean, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(74, 74, 74))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usuarios_btn_add)
                    .addComponent(principal_btn_clean))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usuarios_btn_edit)
                    .addComponent(usuarios_btn_actTbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(usuarios_btn_del)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 206, -1));

        usuarios_jtf_nombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(usuarios_jtf_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 120, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("ID  del usuario");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Informacion de usuario");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 41, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Administración de usuarios");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(392, 11, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Contraseña");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Telefono");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        usuarios_jtf_pass.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(usuarios_jtf_pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 120, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Email");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        usuarios_jtf_email.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(usuarios_jtf_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, 120, -1));

        usuarios_cb_rank.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        usuarios_cb_rank.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        usuarios_cb_rank.setToolTipText("Nombre del producto");
        getContentPane().add(usuarios_cb_rank, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 140, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Rango");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        usuarios_jtf_tlf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(usuarios_jtf_tlf, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, 120, -1));

        ((AbstractDocument) usuarios_jtf_id.getDocument()).setDocumentFilter(new CustomDocumentFilter());
        usuarios_jtf_id.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        usuarios_jtf_id.setText("0");
        usuarios_jtf_id.setToolTipText("Numero de orden");
        usuarios_jtf_id.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        usuarios_jtf_id.setEnabled(false);
        getContentPane().add(usuarios_jtf_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 60, -1));

        jCheckBox1.setText("Editar");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Usuario");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Nota: la ID del usuario no se deberia cambiar por este medio, el campo 'ID del usuario' solo esta para poder editar otros datos del usuario");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 51, 51));
        jLabel10.setText("?");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 20, 20, -1));

        usuario_cb_ordenpor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        usuario_cb_ordenpor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                usuario_cb_ordenporItemStateChanged(evt);
            }
        });
        getContentPane().add(usuario_cb_ordenpor, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 30, -1, -1));

        usuario_cb_ordendeforma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        usuario_cb_ordendeforma.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                usuario_cb_ordendeformaItemStateChanged(evt);
            }
        });
        getContentPane().add(usuario_cb_ordendeforma, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 30, -1, -1));

        jLabel11.setText("Ordenar por");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, -1, -1));

        jLabel12.setText("Ordenar de forma");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, -1, -1));

        usuarios_btn_orderAccept.setText("Aceptar");
        usuarios_btn_orderAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarios_btn_orderAcceptActionPerformed(evt);
            }
        });
        getContentPane().add(usuarios_btn_orderAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 30, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void principal_btn_cleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_principal_btn_cleanActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_principal_btn_cleanActionPerformed
    public void limpiarCampos(){
        usuarios_jtf_id.setText("0");
        usuarios_jtf_nombre.setText("");
        usuarios_cb_rank.setSelectedIndex(1);
        usuarios_jtf_pass.setText("");
        usuarios_jtf_tlf.setText("");
        usuarios_jtf_email.setText("");
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        usuario_cb_ordenpor.removeAllItems();
        usuario_cb_ordendeforma.removeAllItems();
        usuario_cb_ordenpor.addItem("ID_usuario");
        usuario_cb_ordenpor.addItem("username");
        usuario_cb_ordenpor.addItem("rank");
        usuario_cb_ordenpor.addItem("userTlf");
        usuario_cb_ordenpor.addItem("userEmail");
        usuario_cb_ordendeforma.addItem("ASC");
        usuario_cb_ordendeforma.addItem("DESC");
 
        updateRankList();
        limpiarCampos();
        update_UsuariosTable();
    }//GEN-LAST:event_formWindowOpened

 
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        con.desconectar("Usuarios");
    }//GEN-LAST:event_formWindowClosed

    private void usuarios_btn_actTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarios_btn_actTblActionPerformed
        update_UsuariosTable();
    }//GEN-LAST:event_usuarios_btn_actTblActionPerformed

    private void usuarios_btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarios_btn_addActionPerformed
        if(User.Rank <2){
            JOptionPane.showMessageDialog(null, "No tienes permiso para realizar esta accion","Informacion",JOptionPane.OK_OPTION);
            
        }
        else{
            try{
                pst = con.conn.prepareStatement("INSERT INTO `usuarios`(`rank`,`username`,`password`,`userTlf`,`userEmail`) VALUES(?,?,?,?,?)");
                int numRank = rankList.get(usuarios_cb_rank.getSelectedItem().toString());
                pst.setInt(1, numRank );
                pst.setString(2, usuarios_jtf_nombre.getText() );
                pst.setString(3, usuarios_jtf_pass.getText() );
                pst.setString(4, usuarios_jtf_tlf.getText() );
                pst.setString(5, usuarios_jtf_email.getText() );
                int row = pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Usuario añadido correctamente","Agregar usuario",JOptionPane.OK_OPTION);
            }catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Ocurrio un problema al tratar de agregar un usuario","Error - agregar usuario",JOptionPane.ERROR_MESSAGE);
                System.out.println(ex.getMessage());
            }
            finally{
                update_UsuariosTable();
                limpiarCampos();
            }
        }       
    }//GEN-LAST:event_usuarios_btn_addActionPerformed

    private void usuarios_btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarios_btn_editActionPerformed

    }//GEN-LAST:event_usuarios_btn_editActionPerformed

    private void usuarios_btn_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarios_btn_delActionPerformed

    }//GEN-LAST:event_usuarios_btn_delActionPerformed

    private void usuarios_btn_delMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usuarios_btn_delMouseClicked
        if(User.Rank <2){
            JOptionPane.showMessageDialog(null, "No tienes permiso para realizar esta accion","Informacion",JOptionPane.OK_OPTION);
        }
        else{
            if(usuarios_jtf_id.getText().isEmpty() || usuarios_jtf_id.getText()=="0"){
            JOptionPane.showMessageDialog(this, "Porfavor escriba o seleccione el nombre de usuario a eliminar","Eliminar usuario",JOptionPane.OK_OPTION);
            }else{
                int userID = Integer.valueOf(usuarios_jtf_id.getText()); 
                try{
                    pst = con.conn.prepareStatement("SELECT * FROM `usuarios` WHERE `ID_usuario`=?");
                    pst.setInt(1, userID);
                    ResultSet rs = pst.executeQuery();
                    rs.next();
                    int pos = rs.getInt("ID_usuario");
                    rs.close();
                    if(pos <=0){
                        JOptionPane.showMessageDialog(this, "Este usuario no existe","Eliminar usuario",JOptionPane.OK_OPTION);
                    }else{
                        pst = con.conn.prepareStatement("DELETE FROM `usuarios` WHERE `ID_usuario`=?");
                        pst.setInt(1, userID);
                        pst.executeUpdate();
                        JOptionPane.showMessageDialog(this, "Usuario eliminado correctamente","Eliminar usuario",JOptionPane.OK_OPTION);
                    }
                    
                }catch(SQLException ex){
                    System.out.println("ERROR ELIMINAR USUARIO: "+ex.getMessage());
                    JOptionPane.showMessageDialog(this, "Ocurrio un error al tratar de eliminar el usuario","Eliminar usuario",JOptionPane.ERROR_MESSAGE);
                }finally{
                    update_UsuariosTable();
                    limpiarCampos();
                }
                
            }
            
        }
    }//GEN-LAST:event_usuarios_btn_delMouseClicked

    private void usuarios_tbl_usersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usuarios_tbl_usersMouseClicked
        DefaultTableModel model = (DefaultTableModel)usuarios_tbl_users.getModel();
        int myIndex = usuarios_tbl_users.getSelectedRow();
        usuarios_jtf_id.setText(model.getValueAt(myIndex, 0).toString());
        usuarios_cb_rank.setSelectedItem(model.getValueAt(myIndex, 1).toString());
        usuarios_jtf_nombre.setText(model.getValueAt(myIndex, 2).toString());
        usuarios_jtf_pass.setText(model.getValueAt(myIndex,3).toString());
        
        try{
            usuarios_jtf_tlf.setText(model.getValueAt(myIndex,4).toString());
        }catch(Exception ex){
            //System.out.println("ex: "+ex.getMessage());
            usuarios_jtf_tlf.setText("");
        }
        try{
            usuarios_jtf_email.setText(model.getValueAt(myIndex,5).toString());
        }catch(Exception ex){
            //System.out.println("ex: "+ex.getMessage());
            usuarios_jtf_email.setText("");
        }
  
        
        
    }//GEN-LAST:event_usuarios_tbl_usersMouseClicked

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        usuarios_jtf_id.setEnabled(evt.getStateChange()==1 ? true:false);
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        JOptionPane.showMessageDialog(this, "*Al añadir un nuevo usuario se le colocara una ID establecida por el sistema.\n*Al editar un usuario el campo de 'ID' debe contener una ID existente.\n*Ni la ID ni el nombre de usuario del usuario se pueden repetir.\n*La eliminacion se hace en base a la ID","INFORMACION USUARIOS",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabel10MouseClicked

    private void usuarios_btn_editMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usuarios_btn_editMouseClicked
        if(User.Rank <2){
            JOptionPane.showMessageDialog(null, "No tienes permiso para realizar esta accion","Informacion",JOptionPane.OK_OPTION);
        }else{
            try{
                pst = con.conn.prepareStatement("UPDATE `usuarios` SET `rank`=?,`username`=?,`password`=?,`userTlf`=?,`userEmail`=? WHERE `ID_usuario`= ?");
                int numRank = rankList.get(usuarios_cb_rank.getSelectedItem().toString());
                System.out.println("numRank: "+numRank);
                pst.setInt(1, numRank );
                pst.setString(2, usuarios_jtf_nombre.getText() );
                System.out.println("username: "+usuarios_jtf_nombre.getText());
                pst.setString(3, usuarios_jtf_pass.getText() );
                System.out.println("pass: "+usuarios_jtf_pass.getText());
                pst.setString(4, usuarios_jtf_tlf.getText() );
                System.out.println("tlf: "+usuarios_jtf_tlf.getText());
                pst.setString(5, usuarios_jtf_email.getText() );
                System.out.println("email: "+usuarios_jtf_email.getText());
                pst.setInt(6,Integer.valueOf(usuarios_jtf_id.getText()));
                System.out.println("id: "+Integer.valueOf(usuarios_jtf_id.getText()));
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Usuario editado correctamente","Editar usuario",JOptionPane.OK_OPTION);
            }catch(Exception ex){
                System.out.println("Error Usuarios_btn_editMouseClicked: "+ex.getMessage());
                JOptionPane.showMessageDialog(this, "Ocurrio un error al tratar de editar este usuario","Editar usuario",JOptionPane.ERROR_MESSAGE);
            }finally{
                update_UsuariosTable();
                limpiarCampos();
            }
        }
    }//GEN-LAST:event_usuarios_btn_editMouseClicked

    private void usuario_cb_ordendeformaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_usuario_cb_ordendeformaItemStateChanged

    }//GEN-LAST:event_usuario_cb_ordendeformaItemStateChanged

    private void usuario_cb_ordenporItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_usuario_cb_ordenporItemStateChanged

    }//GEN-LAST:event_usuario_cb_ordenporItemStateChanged

    private void usuarios_btn_orderAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarios_btn_orderAcceptActionPerformed
        ordenarDeForma = usuario_cb_ordendeforma.getSelectedItem().toString();
        ordenarPor = usuario_cb_ordenpor.getSelectedItem().toString();
        System.out.println(ordenarDeForma+" : "+ordenarPor);
        update_UsuariosTable();
    }//GEN-LAST:event_usuarios_btn_orderAcceptActionPerformed
    public void resizeColumnWidth(JTable table) {
        final TableColumnModel columnModel = table.getColumnModel();
        for (int column = 0; column < table.getColumnCount(); column++) {
            int width = 15; // Min width
            for (int row = 0; row < table.getRowCount(); row++) {
                TableCellRenderer renderer = table.getCellRenderer(row, column);
                Component comp = table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width +1 , width);
            }
            if(width > 300)
                width=300;
            columnModel.getColumn(column).setPreferredWidth(width);
        }
    }
    public void updateRankList(){
        try{
            usuarios_cb_rank.removeAllItems();
            pst = con.conn.prepareStatement("SELECT"+"`ID_rank`,`nombreRank`"+" FROM userranks ORDER BY ID_rank DESC");
            ResultSet res = pst.executeQuery();
            while(res.next()){
                rankList.put(res.getString("nombreRank"),res.getInt("ID_rank"));
            }
            for(Map.Entry m:rankList.entrySet()){  
                usuarios_cb_rank.addItem(m.getKey().toString());
            }  
        }catch(SQLException ex){
           System.out.println("ERROR EN updateRankList: "+ex.getMessage());
        }
    }    
    
    public void clearTable(){
        ((DefaultTableModel)usuarios_tbl_users.getModel()).setRowCount(0);
    }
    public void update_UsuariosTable(){
        clearTable();
        Object[][] dtPer;
        String[] columnNames ={"ID","Rango","Nombre","Contraseña","Telefono","Email"};
        dtPer = getUsuariosDatos();
        DefaultTableModel datos = new DefaultTableModel(dtPer,columnNames){
            @Override
            public boolean isCellEditable(int row, int column) {
            return false;
        }
        };
        
        usuarios_tbl_users.setModel(datos);
        final TableColumnModel columnModel = usuarios_tbl_users.getColumnModel();
        for (int column = 0; column < usuarios_tbl_users.getColumnCount(); column++) {
            int width = 15; // Min width
            for (int row = 0; row < usuarios_tbl_users.getRowCount(); row++) {
                TableCellRenderer renderer = usuarios_tbl_users.getCellRenderer(row, column);
                Component comp = usuarios_tbl_users.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width +1 , width);
            }
            if(width > 300)
                width=300;
            columnModel.getColumn(column).setPreferredWidth(width);
        }
        
    }
    public Object [][] getUsuariosDatos(){
        int registros = 0;
        int totalRegistros = 0;
        try{
            pst = con.conn.prepareStatement("SELECT count(1) as total FROM usuarios");
            ResultSet res = pst.executeQuery();
            res.next();
            registros = res.getInt("total");
            res.close();
            
        }catch(SQLException ex){
            System.out.println(ex);
        }
        Object[][] data = new String[registros][6];
        try{
            String join1 = " JOIN userranks as r ON u.rank=r.ID_rank";
            pst = con.conn.prepareStatement("SELECT"+" ID_usuario, nombreRank, username, password, userTlf, userEmail"+" FROM usuarios as u"+join1+" ORDER BY "+ordenarPor+" "+ordenarDeForma);
            //pst.setString(1, ordenarPor);
            //pst.setString(2, ordenarDeForma);
            ResultSet res = pst.executeQuery();
            int i = 0;
            while(res.next()){
                String idUsuario = res.getString("ID_usuario");
                String nombreRank = res.getString("nombreRank");
                String username = res.getString("username");
                String password = res.getString("password");
                String userTlf = res.getString("userTlf");
                String userEmail = res.getString("userEmail");
                
                data[i][0] = idUsuario;
                data[i][1] = nombreRank;
                data[i][2] = username;
                data[i][3] = password;
                data[i][4] = userTlf;
                data[i][5] = userEmail;
                i++;
            }
            res.close();
        }catch(SQLException ex){
            System.out.println(ex);
        }
        return data;
    }
    public void start(){
         /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Usuarios().setVisible(true);
            }
        });
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Usuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton principal_btn_clean;
    private javax.swing.JComboBox<String> usuario_cb_ordendeforma;
    private javax.swing.JComboBox<String> usuario_cb_ordenpor;
    private javax.swing.JButton usuarios_btn_actTbl;
    private javax.swing.JButton usuarios_btn_add;
    private javax.swing.JButton usuarios_btn_del;
    private javax.swing.JButton usuarios_btn_edit;
    private javax.swing.JButton usuarios_btn_orderAccept;
    private javax.swing.JComboBox<String> usuarios_cb_rank;
    private javax.swing.JTextField usuarios_jtf_email;
    private javax.swing.JTextField usuarios_jtf_id;
    private javax.swing.JTextField usuarios_jtf_nombre;
    private javax.swing.JTextField usuarios_jtf_pass;
    private javax.swing.JTextField usuarios_jtf_tlf;
    private javax.swing.JTable usuarios_tbl_users;
    // End of variables declaration//GEN-END:variables
}
